{"version":3,"file":"static/js/987.121e1e33.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.jsx","helpers/submitCheck.js","components/Forms/ContactForm.jsx","components/EditContact/EditContact.styled.jsx","components/EditContact/EditContact.jsx","components/contacts/ContactList/ContactItem.jsx","components/contacts/ContactList/ContactList.styled.jsx","components/contacts/ContactList/ContactList.jsx","helpers/sorting.js","components/contacts/ContactList/SortBox.jsx","components/contacts/Filter/Filter.jsx","components/contacts/Filter/Filter.styled.jsx","components/contacts/Phonebook/Phonebook.jsx","components/contacts/Phonebook/Phonebook.styled.jsx","pages/Contacts.jsx","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  width: 600px;\n  height: ${({ name, theme }) => theme.height[name]};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  position: relative;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.colors.main};\n  border-radius: 10px;\n  box-shadow: 5px 5px 10px black;\n\n  & label {\n    font-weight: bold;\n    position: relative;\n    width: 500px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    gap: 5px;\n  }\n`;\n\nexport const FieldStyled = styled(Field)`\n  width: 80%;\n  height: 30px;\n  padding: 1px 5px;\n  font-size: 100%;\n  font-weight: inherit;\n  border-radius: 5px;\n`;\n\nexport const ErrorMsgStyled = styled(ErrorMessage)`\n  position: absolute;\n  top: calc(100% + 5px);\n  right: 0;\n  width: 100%;\n  text-align: center;\n  padding: 2px 10px;\n  color: #9a0c0c;\n  background-color: #ffffff8b;\n  font-size: 12px;\n  border-radius: 5px;\n`;\n\nexport const BtnForm = styled.button`\n  width: 90%;\n  height: 40px;\n  font-size: inherit;\n  font-weight: bold;\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  box-shadow: 3px 3px 10px #000000be;\n  outline: none;\n  transition: all 200ms;\n  &:hover {\n    background-color: #02f7f7;\n    scale: 1.03;\n  }\n  &:active {\n    scale: 1.01;\n  }\n`;\n","import * as Yup from 'yup';\n\nexport const SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n    .max(30, 'Too Long!')\n    .matches(\n      /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required'),\n});\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().email().max(255).required('Email is required'),\n  password: Yup.string()\n    .min(8, 'At least 8 symbols')\n    .max(255, \"It's too long\")\n    .required('Password is required'),\n});\n\nexport const RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  email: Yup.string().email().max(255).required('Required'),\n  password: Yup.string()\n    .min(8, 'At least 8 symbols')\n    .max(255, \"It's too long\")\n    .required('Required'),\n});\n","import { Formik } from 'formik';\nimport Spinner from 'react-spinner-material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { SignupSchema } from 'helpers/submitCheck';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  BtnForm,\n  ErrorMsgStyled,\n  FieldStyled,\n  FormStyled,\n} from './Forms.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    name = name.trim();\n    number = number.trim();\n\n    if (\n      contacts.some(\n        ({ name: savedName }) => savedName.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(name + ' is already in contacts list!');\n    } else {\n      dispatch(addContact({ name, number }));\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={SignupSchema}\n    >\n      <FormStyled name=\"contact\">\n        <label>\n          Name\n          <FieldStyled\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Charles de Castelmore d'Artagnan\"\n          />\n          <ErrorMsgStyled name=\"name\" component=\"div\" />\n        </label>\n        <label>\n          Phone\n          <FieldStyled type=\"tel\" name=\"number\" placeholder=\"Phone\" />\n          <ErrorMsgStyled name=\"number\" component=\"div\" />\n        </label>\n        <BtnForm type=\"submit\" disabled={isLoading}>\n          {isLoading ? (\n            <Spinner radius={25} color={'#333'} stroke={3} visible={true} />\n          ) : (\n            'Add contact'\n          )}\n        </BtnForm>\n      </FormStyled>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000000aa;\n\n  & h3 {\n    font-weight: 500;\n\n    /* font-size: 48; */\n    /* text-align: 'center'; */\n  }\n  & span {\n    color: green;\n  }\n`;\n\nexport const ButtonClose = styled.button`\n  width: 2em;\n  height: 2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  border: none;\n  transition: all 200ms;\n  transform: rotate(0);\n\n  &:hover {\n    transform: rotate(0.5turn);\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SignupSchema } from 'helpers/submitCheck';\nimport { editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  BtnForm,\n  ErrorMsgStyled,\n  FieldStyled,\n  FormStyled,\n} from '../Forms/Forms.styled';\nimport { ButtonClose, Wrapper } from './EditContact.styled';\nimport { CgCloseO } from 'react-icons/cg';\n\nexport function EditContact({\n  contact: { name: savedName, number: savedNumber, id },\n  handleClose,\n}) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }) => {\n    name = name.trim();\n    number = number.trim();\n\n    const checkContact = contacts.find(i => i.name === name);\n    if (checkContact && checkContact.id !== id) {\n      alert(name + ' is already in contacts list!');\n    } else if (name === savedName && number === savedNumber) {\n      handleClose();\n    } else {\n      dispatch(editContact({ name, number, id }));\n      handleClose();\n    }\n  };\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{ name: savedName, number: savedNumber }}\n        onSubmit={handleSubmit}\n        validationSchema={SignupSchema}\n      >\n        <FormStyled name=\"editContact\">\n          <h3>\n            Editing contact: <span>{savedName}</span>\n          </h3>\n\n          <label>\n            Name\n            <FieldStyled type=\"text\" name=\"name\" />\n            <ErrorMsgStyled name=\"name\" component=\"div\" />\n          </label>\n          <label>\n            Phone\n            <FieldStyled type=\"tel\" name=\"number\" />\n            <ErrorMsgStyled name=\"number\" component=\"div\" />\n          </label>\n          <BtnForm type=\"submit\">Edit contact</BtnForm>\n          <ButtonClose type=\"button\" onClick={() => handleClose()}>\n            <CgCloseO size=\"2em\" />\n          </ButtonClose>\n        </FormStyled>\n      </Formik>\n    </Wrapper>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { CgTrashEmpty } from 'react-icons/cg';\nimport { TbUserEdit } from 'react-icons/tb';\nimport Spinner from 'react-spinner-material';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ButtonItemStyled, ItemInfoStyled } from '..';\nimport { createPortal } from 'react-dom';\nimport { EditContact } from 'components/EditContact/EditContact';\n\nexport function ContactItem({ name, number, id }) {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    setIsLoading(true);\n  };\n\n  return (\n    <>\n      <ItemInfoStyled>\n        <span>{name}:</span>\n        <span> {number}</span>\n      </ItemInfoStyled>\n      <ButtonItemStyled\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => {\n          setIsEditing(true);\n        }}\n      >\n        {isLoading ? (\n          <Spinner radius={18} color={'#777'} stroke={4} visible={true} />\n        ) : (\n          <TbUserEdit size=\"22px\" />\n        )}\n      </ButtonItemStyled>\n      <ButtonItemStyled\n        type=\"button\"\n        name=\"delete\"\n        disabled={isLoading}\n        onClick={handleDelete}\n      >\n        {isLoading ? (\n          <Spinner radius={18} color={'#777'} stroke={4} visible={true} />\n        ) : (\n          <CgTrashEmpty size=\"22px\" />\n        )}\n      </ButtonItemStyled>\n      {isEditing &&\n        createPortal(\n          <EditContact\n            name=\"editForm\"\n            contact={{ name, number, id }}\n            handleClose={() => setIsEditing(false)}\n          />,\n          document.body\n        )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListStyled = styled.ul`\n  width: 100%;\n  font-size: 18px;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding: 5px;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #888;\n    border-radius: 5px;\n  }\n`;\n\nexport const ListItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  color: #0000008d;\n  &:hover {\n    color: black;\n  }\n`;\n\nexport const ItemInfoStyled = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  justify-content: space-between;\n  border-bottom: 1px dotted #000;\n`;\n\nexport const ButtonItemStyled = styled.button`\n  height: 24px;\n  width: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  outline: none;\n  text-transform: uppercase;\n  &:hover {\n    color: ${({ name }) => (name === 'delete' ? '#ff3737' : '#0026ff')};\n    scale: 1.2;\n  }\n`;\n\nexport const AllContactsStyled = styled.p`\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  font-weight: 700;\n  font-size: 10px;\n`;\n\nexport const CheckBoxStyled = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2px;\n  top: 15px;\n  right: 15px;\n  font-weight: 700;\n  font-size: 12px;\n`;\n\nexport const CheckStyled = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const LabelListStyled = styled.label`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport sorting from 'helpers/sorting';\nimport {\n  AllContactsStyled,\n  ListItemStyled,\n  ListStyled,\n  SortBox,\n  ContactItem,\n} from '..';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport function ContactList() {\n  const dispatch = useDispatch();\n  const contactsAll = useSelector(selectContacts);\n  const contacts = useSelector(selectFilteredContacts);\n  const [sortBy, setSortBy] = useState('name');\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleCheck = value => {\n    setSortBy(value);\n  };\n\n  return (\n    <>\n      <AllContactsStyled>\n        {contactsAll.length} all contacts <br />\n        {contacts.length} filtered contacts\n      </AllContactsStyled>\n      <SortBox onCheck={handleCheck} sortBy={sortBy} />\n      <ListStyled>\n        {sorting(contacts, sortBy).map(({ name, number, id }) => (\n          <ListItemStyled key={id}>\n            <ContactItem name={name} number={number} id={id} />\n          </ListItemStyled>\n        ))}\n      </ListStyled>\n    </>\n  );\n}\n","export default function sorting(items, indicator) {\n  return items.sort((a, b) =>\n    b[indicator].toLowerCase() > a[indicator].toLowerCase() ? -1 : 1\n  );\n}\n","import { CheckBoxStyled, CheckStyled, LabelListStyled } from '..';\n\nexport const SortBox = ({ onCheck, sortBy }) => {\n  return (\n    <CheckBoxStyled>\n      <span>sort by</span>\n      <CheckStyled>\n        <LabelListStyled>\n          name\n          <input\n            type=\"radio\"\n            value=\"name\"\n            checked={sortBy === 'name'}\n            onChange={e => onCheck(e.target.value)}\n          />\n        </LabelListStyled>\n        <LabelListStyled>\n          phone\n          <input\n            type=\"radio\"\n            value=\"number\"\n            checked={sortBy === 'number'}\n            onChange={e => onCheck(e.target.value)}\n          />\n        </LabelListStyled>\n      </CheckStyled>\n    </CheckBoxStyled>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { FilterStyled } from '..';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <FilterStyled\n      type=\"text\"\n      name=\"filter\"\n      onChange={e => dispatch(changeFilter(e.target.value))}\n      value={filter}\n      placeholder=\"add filter...\"\n    />\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterStyled = styled.input`\n  width: 50%;\n  font-size: 16px;\n  border-radius: 5px;\n  padding: 4px;\n`;\n","import { ContactList, Filter, PhonebookStyled } from '..';\n\nexport function Phonebook() {\n  return (\n    <PhonebookStyled>\n      <Filter />\n      <ContactList />\n    </PhonebookStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const PhonebookStyled = styled.div`\n  width: 600px;\n  max-height: 420px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  background-color: ${({ theme }) => theme.colors.bg};\n  border-radius: 10px;\n  box-shadow: inset 0 0 30px teal, 3px 3px 10px black;\n`;\n","import { ContactForm } from 'components/Forms/ContactForm';\nimport { Phonebook } from 'components/contacts';\nimport styled from 'styled-components';\n\nconst PhonebookWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport default function Contacts() {\n  return (\n    <PhonebookWrap>\n      <ContactForm />\n      <Phonebook />\n    </PhonebookWrap>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (items, filter) =>\n    items.filter(({ name, number }) =>\n      (name + number).toLowerCase().includes(filter.toLowerCase())\n    )\n);\n"],"names":["FormStyled","styled","Form","name","theme","height","colors","main","FieldStyled","Field","ErrorMsgStyled","ErrorMessage","BtnForm","SignupSchema","Yup","shape","min","max","matches","required","number","LoginSchema","email","password","RegisterSchema","initialValues","ContactForm","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","contacts","selectContacts","onSubmit","resetForm","trim","some","toLowerCase","alert","addContact","validationSchema","type","placeholder","component","disabled","radius","color","stroke","visible","Wrapper","ButtonClose","EditContact","contact","savedName","savedNumber","id","handleClose","checkContact","find","i","editContact","onClick","size","ContactItem","useState","setIsLoading","isEditing","setIsEditing","ItemInfoStyled","ButtonItemStyled","deleteContact","createPortal","document","body","ListStyled","ListItemStyled","AllContactsStyled","CheckBoxStyled","CheckStyled","LabelListStyled","ContactList","contactsAll","selectFilteredContacts","sortBy","setSortBy","useEffect","fetchContacts","items","indicator","length","SortBox","onCheck","value","sort","a","b","map","checked","onChange","e","target","Filter","filter","selectFilter","FilterStyled","changeFilter","Phonebook","PhonebookStyled","bg","PhonebookWrap","Contacts","state","createSelector","includes"],"sourceRoot":""}